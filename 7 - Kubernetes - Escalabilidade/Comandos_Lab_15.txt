# Passo 1 - Crie o policy necessário para o cluster auto scale e atribua ao IAM role utilizado pelos Worker Nodes :

export AWS_DEFAULT_REGION=us-east-1
STACK_NAME=$(eksctl get nodegroup --cluster k8s-de-k-a-s -o json | jq -r '.[].StackName')
ROLE_NAME=$(aws cloudformation describe-stack-resources --stack-name $STACK_NAME | jq -r '.StackResources[] | select(.ResourceType=="AWS::IAM::Role") | .PhysicalResourceId')
aws iam put-role-policy --role-name $ROLE_NAME --policy-name ASG-Policy-For-Worker --policy-document file://~/environment/kubernetes_de_k_a_s/7\ -\ Kubernetes\ -\ Escalabilidade/4-Cluster_Autoscaler/k8s-asg-policy.json

# Passo 2 - Instale o cluster autoscaler a partir do arquivo de definição yaml:

kubectl apply -f cluster-autoscaler.yaml

# Passo 3 - Crie um deployment com nginx a partir do arquivo de definição yaml:

kubectl apply -f nginx.yaml

# Passo 4 - Verifique os pods criados:

kubectl -n playground get pods

# Passo 5 - Aumente o número de replicas do nginx para 20:

kubectl -n playground  scale --replicas=20 deployment/nginx-to-scaleout

# Passo 6 - Monitore o comportamento do cluster autoscaler verificando os pods e nós:

kubectl get nodes -w
kubectl -n playground get pods -w

# Passo 7 - Verifique o log do cluster autoscaler:

kubectl -n kube-system logs -f cluster-autoscaler-????????

# Passo 8 - Remova o deployment utilizado nos testes:

kubectl -n playground delete deploy nginx-to-scaleout
